// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

contract ExampleRandOracleClient {
    uint256 public randNum;
    
    /**
     * @dev emitted when randNum is updated
     */
    event RandNumUpdated(uint256 randNumber);

    /**
     * @dev generate a random number from [0,99]
     * @param output random bytes generated by RandOracle.sol
     */
    function awaitRandOracle(uint256, bytes calldata output, bytes calldata) external {
        uint256 randNumber;
        assembly {
            // Load the actual data from calldata at the start of output (which is stored as a pointer in memory)
            randNumber := calldataload(output.offset)
        }
        uint256 result = randNumber % 100;
        randNum = result;
        emit RandNumUpdated(randNumber); 
    }
}